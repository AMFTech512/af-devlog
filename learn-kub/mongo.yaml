apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
  labels:
    app: mongo
spec:
  replicas: 1
  selector:
    # this will match the label defined in template->metadata->labels and create mongo-1 mongo-2 etc if there were multiple replicas
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        # this is a way to identify pods in this deployment
        app: mongo
    spec:
      containers:
      - name: mongodb
        image: mongo:5.0
        ports:
        - containerPort: 27017
        env:
          - name: MONGO_INITDB_ROOT_USERNAME
            # use this to reference the secrets in mongo-secret.yaml
            valueFrom:
              secretKeyRef:
                name: mongo-secret
                key: mongo-user
          - name: MONGO_INITDB_ROOT_PASSWORD
            # use this to reference the secrets in mongo-secret.yaml
            valueFrom:
              secretKeyRef:
                name: mongo-secret
                key: mongo-password
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
spec:
  selector:
    # this corresponds to the Deployment->spec->template->metadata->labels->app
    app: mongo
  ports:
    - protocol: TCP
      # the port that clients will connect to on this service;
      # for this we'll just use the same port because clients will be expecting to 
      # connect to a mongodb instance
      port: 27017
      # the port to forward traffic to on the pod
      targetPort: 27017